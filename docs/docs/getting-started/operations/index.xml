<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Day 2 operations on Butler</title>
    <link>https://butler.ptarmiganlabs.com/docs/getting-started/operations/</link>
    <description>Recent content in Day 2 operations on Butler</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://butler.ptarmiganlabs.com/docs/getting-started/operations/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Standalone app</title>
      <link>https://butler.ptarmiganlabs.com/docs/getting-started/operations/standalone/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://butler.ptarmiganlabs.com/docs/getting-started/operations/standalone/</guid>
      <description>Running Butler as standalone, native app Windows Running standalone Butler on Windows Server 2016 looks like this:&#xA;PS C:\tools\butler&amp;gt; .\butler.exe Usage: butler [options] Butler gives superpowers to client-managed Qlik Sense Enterprise on Windows! Advanced reload failure alerts, task scheduler, key-value store, file system access and much more. Options: -V, --version output the version number -c, --configfile &amp;lt;file&amp;gt; path to config file -l, --loglevel &amp;lt;level&amp;gt; log level (choices: &amp;#34;error&amp;#34;, &amp;#34;warn&amp;#34;, &amp;#34;info&amp;#34;, &amp;#34;verbose&amp;#34;, &amp;#34;debug&amp;#34;, &amp;#34;silly&amp;#34;) --new-relic-account-name &amp;lt;name.</description>
    </item>
    <item>
      <title>Docker</title>
      <link>https://butler.ptarmiganlabs.com/docs/getting-started/operations/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://butler.ptarmiganlabs.com/docs/getting-started/operations/docker/</guid>
      <description>Running Butler in Docker First configure the docker-compose.yml file as needed, then start the Docker container in interactive mode (with output sent to the screen).&#xA;This is useful to ensure everything works as intended when first setting up Butler SOS.&#xA;docker-compose up Once Butler has been verified to work as intended, hit ctrl-c to stop it.&#xA;Then start Butler in deameon (background) mode:&#xA;docker-compose up -d From here on the Docker enviromment will make sure Butler is always running, including restarting it if it for some reason stops.</description>
    </item>
    <item>
      <title>Node.js app</title>
      <link>https://butler.ptarmiganlabs.com/docs/getting-started/operations/nodejs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://butler.ptarmiganlabs.com/docs/getting-started/operations/nodejs/</guid>
      <description>Running Butler as Node.js app If the Butler source code has been installed in d:\tools\butler, starting Butler as a Node.js app on Windows could look like this:&#xA;d: cd \tools\butler\src node butler.js It is of course also possible to put those commands in a command file (.bat or .ps1 on Windows) file and execute that file instead.&#xA;The commands above assume there is a d:\tools\butler\src\config directory in which there is a YAML config file.</description>
    </item>
  </channel>
</rss>
